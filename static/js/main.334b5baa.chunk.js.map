{"version":3,"sources":["reducers.js","components/Scroll.js","components/CounterButton.js","components/Header.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","actions.js","constants.js","serviceWorker.js","index.js"],"names":["initialStateSearch","searchField","initialStateRobots","isPending","robots","error","Scroll","props","react_default","a","createElement","style","overflowY","border","height","children","CounterButton","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateCount","setState","state","count","nextProps","nextState","color","onClick","Component","Header","className","components_CounterButton","Card","_ref","name","email","id","src","concat","alt","CardList","cardComponent","map","user","components_Card","key","SearchBox","searchfield","searchChange","aria-label","type","placeholder","onChange","ErrorBoundary","hasError","e","info","App","onRequestRobots","_this$props","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","components_Header","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","React","connect","searchRobots","requestRobots","dispatch","payload","target","value","fetch","then","response","json","data","catch","err","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.334b5baa.chunk.js","sourcesContent":["import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_FAILED,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_PENDING\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\"\n};\n\nexport const searchRobots = (state = initialStateSearch, action) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\"\n};\n\nexport const requestRobots = (state = initialStateRobots, action) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"500px\"\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass CounterButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n    return false;\n  }\n\n  updateCount = () => {\n    this.setState(state => ({\n      count: state.count + 1\n    }));\n  };\n\n  render() {\n    return (\n      <button color={this.props.color} onClick={this.updateCount}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n}\n\nexport default CounterButton;\n","import React, { Component } from \"react\";\nimport CounterButton from \"./CounterButton\";\n\nclass Header extends Component {\n  /*   shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  } */\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"f1\">RoboFriends</h1>\n        <CounterButton color={\"red\"} />\n      </div>\n    );\n  }\n}\nexport default Header;\n","import React from \"react\";\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robo\" />\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  const cardComponent = robots.map(user => {\n    return (\n      <Card key={user.id} id={user.id} name={user.name} email={user.email} />\n    );\n  });\n  return <div>{cardComponent}</div>;\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        aria-label=\"Search Robots\"\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(e, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooops. That is not good</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Scroll from \"../components/Scroll\";\nimport Header from \"../components/Header\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\n\nimport { setSearchField, requestRobots } from \"../actions\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { searchfield, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n\n    return isPending ? (\n      <h1>Loading ... </h1>\n    ) : (\n      <div className=\"tc\">\n        <Header />\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBoundary>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundary>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchfield: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSearchChange: e => dispatch(setSearchField(e.target.value)),\n  onRequestRobots: () => dispatch(requestRobots())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_FAILED,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_PENDING\n} from \"./constants\";\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\nexport const requestRobots = () => dispatch => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(err => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err }));\n};\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { searchRobots, requestRobots } from \"./reducers\";\n\n//import { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport App from \"./containers/App\";\n\nimport \"./index.css\";\nimport \"tachyons\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\n\n//const logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}